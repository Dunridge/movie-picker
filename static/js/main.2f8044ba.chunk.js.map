{"version":3,"sources":["img/parallax-movies-bg.jpg","img/blockbuster-movies-1.jpg","img/classic-movies.jpg","img/drama-movies.jpg","components/movieItem.js","components/MovieTabs.js","components/Pagination.js","components/Navbar.js","components/Footer.js","components/ParallaxImage.js","components/Info.js","App.js","serviceWorker.js","helpers/UIHelper.js","AppContainer.js","index.js"],"names":["module","exports","MovieItem","state","willWatch","this","props","movie","removeMovie","addMovieToWillWatch","removeMovieFromWillWatch","className","src","backdrop_path","poster_path","alt","title","vote_average","type","onClick","setState","Component","MovieTabs","nextProps","nextState","console","log","sort_by","handleClick","value","updateSortBy","getClassLink","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","map","number","key","Navbar","moviesWillWatch","Footer","class","href","ParallaxImage","y","x","tagOuter","ParallaxMoviesBG","Info","id","blockbusterMovies","classicMovies","dramaMovies","App","getMovies","fetch","then","response","json","data","movies","results","handleDelete","newMoviesList","filter","item","movieList","newMoviesWillWatch","setCurrentPage","pageNumber","current_page","prevProps","prevState","length","slice","includes","React","Boolean","window","location","hostname","match","AppContainer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2f8044ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/parallax-movies-bg.b3666bd1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/blockbuster-movies-1.38615a21.jpg\";","module.exports = __webpack_public_path__ + \"static/media/classic-movies.18a52d27.jpg\";","module.exports = __webpack_public_path__ + \"static/media/drama-movies.ba36325c.jpg\";","import React, { Component } from 'react';\r\n\r\nclass MovieItem extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            willWatch: false\r\n        };\r\n    }\r\n\r\n    // componentWillUnmount() {\r\n    //     console.log('component will unmount', this.props.movie.title);\r\n    // }\r\n\r\n    render() {\r\n        const { movie, removeMovie, addMovieToWillWatch, removeMovieFromWillWatch } = this.props;\r\n\r\n        return (\r\n            <div className=\"card\">\r\n                <img\r\n                    src={`https://image.tmdb.org/t/p/w500${movie.backdrop_path ||\r\n                        movie.poster_path}`}\r\n                    alt=\"\"\r\n                    className=\"card-img-top responsive-img\"\r\n                />\r\n                <div className=\"card-body\">\r\n                    <h6 className=\"card-title\">{movie.title}</h6>\r\n                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                        <p className=\"mb-0\">Rating {movie.vote_average}</p>\r\n                        {this.state.willWatch ? (\r\n                            <button type=\"button\" className=\"btn btn-success\" onClick={() => {\r\n                                this.setState({\r\n                                    willWatch: false\r\n                                })\r\n                                removeMovieFromWillWatch(movie);\r\n                            }}>\r\n                                Remove\r\n                            </button>\r\n                        ) : (\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"btn btn-secondary\"\r\n                                onClick={() => {\r\n                                    this.setState({\r\n                                        willWatch: true\r\n                                    });\r\n                                    addMovieToWillWatch(movie);\r\n                                }}\r\n                            >\r\n                                Add\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                    <button\r\n                        onClick={() => {\r\n                            removeMovie(movie);\r\n                        }}\r\n                    >\r\n                        Delete movie\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MovieItem;\r\n","import React, { Component } from 'react';\r\n\r\nclass MovieTabs extends Component {\r\n\r\n    //WARNING! To be deprecated in React v17. Use new lifecycle static getDerivedStateFromProps instead.\r\n    componentWillReceiveProps(nextProps, nextState) {\r\n        console.log('WillReceiveProps');\r\n        console.log('nextProps sort_by: ', nextProps.sort_by);\r\n        console.log('nextState sort_by: ', this.props.sort_by);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (nextProps.sort_by !== this.props.sort_by) {\r\n            return true;\r\n        } else {\r\n            return false; //returns true by default \r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const handleClick = value => () => {\r\n            updateSortBy(value);\r\n        };\r\n    \r\n        const getClassLink = value => {\r\n            return `nav-link ${sort_by === value ? 'active' : ''}`;\r\n        };\r\n\r\n        const { sort_by, updateSortBy } = this.props;\r\n        return (\r\n            <div>\r\n                <ul className=\"tabs nav nav-pills\">\r\n                    <li className=\"nav-item\">\r\n                        <div\r\n                            className={getClassLink('popularity.desc')}\r\n                            onClick={handleClick('popularity.desc')}\r\n                        >\r\n                            Popularity desc\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <div\r\n                            className={getClassLink('revenue.desc')}\r\n                            onClick={handleClick('revenue.desc')}\r\n                        >\r\n                            Revenue desc\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <div\r\n                            className={getClassLink('vote_average.desc')}\r\n                            onClick={handleClick('vote_average.desc')}\r\n                        >\r\n                            Vote average\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );    \r\n    }\r\n} \r\n\r\nexport default MovieTabs;\r\n","import React from 'react'\r\n\r\nconst Pagination = ({postsPerPage, totalPosts, paginate}) => {\r\n    const pageNumbers = [];\r\n\r\n    for(let i = 1; i < Math.ceil(totalPosts/postsPerPage); i++) {\r\n        pageNumbers.push(i);\r\n    }\r\n\r\n    // href=\"!#\"\r\n    return (\r\n        <nav className=\"white\">\r\n            <ul className=\"pagination\">\r\n                {pageNumbers.map(number => {\r\n                    return(<li key={number} className=\"page-item\">\r\n                        <a onClick={() => paginate(number)} className=\"page-link\"> \r\n                            {number}\r\n                        </a>\r\n                    </li>);\r\n                })}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import React, { Component } from 'react';\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <nav className=\"nav-wrapper solid white\">\r\n            <div className=\"container\">\r\n                <a className=\"brand-logo black-text\">MoviePicker</a>\r\n                <div className=\"right\">\r\n                    <p className=\"black-text\">Will watch: {props.moviesWillWatch}</p>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\r\n\r\nconst Footer = () => {\r\n    return ( \r\n        <footer class=\"page-footer grey darken-3\">\r\n            <div class=\"container\">\r\n                <div class=\"row\">\r\n                    <div class=\"col s12 l6\">\r\n                        <h5>About Me</h5>\r\n                        <p>\r\n                            Lorem ipsum dolor sit amet consectetur adipisicing\r\n                            elit. Consequuntur, quos consectetur doloremque quam\r\n                            odio aut repellendus blanditiis, pariatur sint quae\r\n                            porro corrupti numquam placeat adipisci modi dicta\r\n                            dolor iste reiciendis.\r\n                        </p>\r\n                        <p>\r\n                            Lorem ipsum dolor sit amet consectetur adipisicing\r\n                            elit. Consequuntur, quos consectetur doloremque quam\r\n                            odio aut repellendus blanditiis, pariatur sint quae\r\n                            porro corrupti numquam placeat adipisci modi dicta\r\n                            dolor iste reiciendis.\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div class=\"col s12 l4 offset-l2\">\r\n                        <h5>Connect</h5>\r\n                        <ul>\r\n                                <li><a href=\"#\" class=\"grey-text text-lighten-3\">Facebook</a></li>\r\n                                <li><a href=\"#\" class=\"grey-text text-lighten-3\">Twitter</a></li>\r\n                                <li><a href=\"#\" class=\"grey-text text-lighten-3\">LinkedIn</a></li>\r\n                                <li><a href=\"#\" class=\"grey-text text-lighten-3\">Instagram</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"footer-copyright grey darken-4\">\r\n                <div class=\"container center-align\">\r\n                    &copy; 2020 Photo Ninja\r\n                </div>\r\n            </div>\r\n        </footer>\r\n     );\r\n}\r\n \r\nexport default Footer;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Parallax } from 'react-scroll-parallax';\r\nimport ParallaxMoviesBG from '../img/parallax-movies-bg.jpg';\r\n\r\nconst ParallaxImage = () => {\r\n    return (\r\n        <Parallax className=\"parallax-image\" y={[0, 0]} x={[-100, 50]} tagOuter=\"figure\">\r\n            <div className=\"parallax-contain\">\r\n                <img src={ParallaxMoviesBG} />\r\n            </div>\r\n        </Parallax>\r\n    );\r\n};\r\n\r\nexport default ParallaxImage;\r\n","import React from 'react';\r\nimport Footer from './Footer';\r\nimport blockbusterMovies from '../img/blockbuster-movies-1.jpg';\r\nimport classicMovies from '../img/classic-movies.jpg';\r\nimport dramaMovies from '../img/drama-movies.jpg';\r\nimport parallaxImage from '../img/parallax-movies-bg.jpg';\r\nimport ParallaxImage from '../components/ParallaxImage';\r\n\r\nconst Info = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <section className=\"container section\" id=\"photos\">\r\n                <h4>About us</h4>\r\n                <p>\r\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                    Vitae ratione asperiores, ab aliquid, sunt, obcaecati\r\n                    eveniet placeat quidem reprehenderit laudantium modi et\r\n                    delectus corrupti vel fuga ut at! Minus, unde?\r\n                </p>\r\n            </section>\r\n\r\n            <section class=\"container section scrollspy\" id=\"photos\">\r\n                <div class=\"row\">\r\n                    <div class=\"col s12 l4\">\r\n                        <img\r\n                            src={blockbusterMovies}\r\n                            class=\"responsive-img materialboxed\"\r\n                        />\r\n                    </div>\r\n                    <div class=\"col s12 l6 offset-l1\">\r\n                        <h2 class=\"indigo-text text-darken-4\">Blockbusters</h2>\r\n                        <p>\r\n                            Lorem ipsum dolor sit amet consectetur adipisicing\r\n                            elit. Nisi illum quis, cum corporis expedita ut\r\n                            magni magnam animi, cupiditate tempore omnis\r\n                            tenetur, exercitationem praesentium in dolorem\r\n                            veritatis. Mollitia, ad quam.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col s12 l4 push-l7 offset-l1\">\r\n                        <img\r\n                            src={classicMovies}\r\n                            class=\"responsive-img materialboxed\"\r\n                        />\r\n                    </div>\r\n                    <div class=\"col s12 l6  pull-l5 right-align offset-l1\">\r\n                        <h2 class=\"indigo-text text-darken-4\">Classics</h2>\r\n                        <p>\r\n                            Lorem ipsum dolor sit amet consectetur adipisicing\r\n                            elit. Nisi illum quis, cum corporis expedita ut\r\n                            magni magnam animi, cupiditate tempore omnis\r\n                            tenetur, exercitationem praesentium in dolorem\r\n                            veritatis. Mollitia, ad quam.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col s12 l4\">\r\n                        <img\r\n                            src={dramaMovies}\r\n                            class=\"responsive-img materialboxed\"\r\n                        />\r\n                    </div>\r\n                    <div class=\"col s12 l6 offset-l1\">\r\n                        <h2 class=\"indigo-text text-darken-4\">Drama</h2>\r\n                        <p>\r\n                            Lorem ipsum dolor sit amet consectetur adipisicing\r\n                            elit. Nisi illum quis, cum corporis expedita ut\r\n                            magni magnam animi, cupiditate tempore omnis\r\n                            tenetur, exercitationem praesentium in dolorem\r\n                            veritatis. Mollitia, ad quam.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            {/* parallax */}\r\n            <ParallaxImage/>\r\n            \r\n\r\n            \r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Info;\r\n","import React, { useState, useEffect } from 'react'; //adding lifecycle hooks\nimport './App.css';\n// import { movieData } from './components/movieData';\nimport MovieItem from './components/movieItem';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { movieData } from './components/movieData';\nimport MovieTabs from './components/MovieTabs';\n//let title = 'Hello, World!';\nimport Pagination from './components/Pagination';\nimport Navbar from './components/Navbar';\nimport Info from './components/Info';\nimport $ from 'jquery';\nimport Footer from './components/Footer';\n// import UIHelper from './helpers/UIHelper'; //failed to implement\n\n//UI = function(state, props)\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            movies: [], //movieData // []\n            moviesWillWatch: [],\n            sort_by: 'revenue.desc',\n            current_page: 1\n        };\n        console.log('constructor');\n    }\n\n    componentDidMount() {\n        console.log('Did mount');\n        this.getMovies();\n        console.log('after fetch');\n        // $(document).ready(() => {\n        //     // $('.materialboxed').materialbox();\n        //     // materialbox();\n        //     // this.state.context.materialbox(); //it might not work because you import materialbox in the index file\n        //     // console.log('this.state.context: ', this.state.context);\n        //     console.log(\"hi from jQuery\")\n        // })\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        console.log('did update');\n        console.log('prev', prevProps, prevState);\n        console.log('this', this.props, this.state);\n        if (prevState.sort_by !== this.state.sort_by) {\n            console.log('call api');\n            this.getMovies();\n        }\n    }\n\n    getMovies = () => {\n        fetch(\n            `https://api.themoviedb.org/3/discover/movie?api_key=3f4ca4f3a9750da53450646ced312397&sort_by=${this.state.sort_by}`\n        )\n            .then(response => {\n                //&sort_by=popularity.desc\n                console.log('then');\n                return response.json();\n            })\n            .then(data => {\n                console.log('data: ', data);\n                this.setState({ movies: data.results });\n            });\n    };\n\n    //callback\n    handleDelete = movie => {\n        const newMoviesList = this.state.movies.filter(item => {\n            return item.id !== movie.id;\n        });\n\n        console.log(newMoviesList);\n\n        this.setState({ movies: newMoviesList });\n        // console.log(movie.id)\n    };\n\n    removeMovie = movie => {\n        const newMoviesList = this.state.movies.filter(item => {\n            return item.id !== movie.id;\n        });\n\n        console.log(newMoviesList);\n\n        this.setState({ movies: newMoviesList });\n    };\n\n    addMovieToWillWatch = movie => {\n        console.log(movie);\n        // console.log(\"addMovieToWillWatchFunc called\")\n        const movieList = [...this.state.moviesWillWatch, movie];\n        this.setState({ moviesWillWatch: movieList });\n    };\n\n    removeMovieFromWillWatch = movie => {\n        const newMoviesWillWatch = this.state.moviesWillWatch.filter(item => {\n            return item.id !== movie.id;\n        });\n\n        this.setState({\n            moviesWillWatch: newMoviesWillWatch\n        });\n    };\n\n    updateSortBy = value => {\n        this.setState({\n            sort_by: value\n        });\n    };\n\n    setCurrentPage = pageNumber => {\n        this.setState({\n            current_page: pageNumber\n        });\n        console.log(this.state);\n    };\n\n    // Change page\n    paginate = pageNumber => this.setCurrentPage(pageNumber);\n\n    render() {\n        // console.log(this);\n        console.log('render', this.state.sort_by);\n        return (\n            <div>\n                <div className=\"container\">\n                    <Navbar\n                        moviesWillWatch={this.state.moviesWillWatch.length}\n                    />\n                    <Info />\n                </div>\n\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className=\"row mb-4\">\n                                <div className=\"col-12\">\n                                    <MovieTabs\n                                        sort_by={this.state.sort_by}\n                                        updateSortBy={this.updateSortBy}\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col s12 l12\">\n                                    {this.state.movies\n                                        .filter(movie => {\n                                            if (this.state.current_page === 1) {\n                                                if (\n                                                    this.state.movies\n                                                        .slice(0, 5)\n                                                        .includes(movie)\n                                                ) {\n                                                    return true;\n                                                }\n                                            } else if (\n                                                this.state.current_page === 2\n                                            ) {\n                                                if (\n                                                    this.state.movies\n                                                        .slice(6, 11)\n                                                        .includes(movie)\n                                                ) {\n                                                    return true;\n                                                }\n                                            } else if (\n                                                this.state.current_page === 3\n                                            ) {\n                                                if (\n                                                    this.state.movies\n                                                        .slice(\n                                                            12,\n                                                            this.state.movies\n                                                                .length\n                                                        )\n                                                        .includes(movie)\n                                                ) {\n                                                    return true;\n                                                }\n                                            }\n                                        })\n                                        .map(movie => {\n                                            //TODO: ouput the number of pages depending on the number of current page\n\n                                            return (\n                                                <div\n                                                    className=\"col-6 mb-4\"\n                                                    key={movie.id}\n                                                >\n                                                    <MovieItem\n                                                        movie={movie}\n                                                        // movies={this.state.movies}\n                                                        removeMovie={\n                                                            this.removeMovie\n                                                        }\n                                                        addMovieToWillWatch={\n                                                            this\n                                                                .addMovieToWillWatch\n                                                        }\n                                                        removeMovieFromWillWatch={\n                                                            this\n                                                                .removeMovieFromWillWatch\n                                                        }\n                                                    />\n                                                </div>\n                                            );\n                                        })}\n                                </div>\n                            </div>\n                            <Pagination\n                                postsPerPage={6}\n                                totalPosts={this.state.movies.length}\n                                paginate={this.paginate}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import $ from 'jquery';\r\n\r\nvar UIHelper = {\r\n    materialbox: () => {\r\n        $('.materialboxed').materialbox();\r\n    }\r\n}\r\n\r\nexport default UIHelper;","import React, { Component } from 'react';\r\nimport {ParallaxProvider} from 'react-scroll-parallax';\r\nimport App from './App';\r\n\r\nclass AppContainer extends Component {\r\n    render() { \r\n        return (\r\n            <ParallaxProvider>\r\n                <App/>\r\n            </ParallaxProvider>\r\n          );\r\n    }\r\n}\r\n \r\nexport default AppContainer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport UIHelper from './helpers/UIHelper';\nimport AppContainer from './AppContainer';\n\nReactDOM.render(<AppContainer />, document.getElementById('root'));\n\n// ReactDOM.render(React.createElement(App, {context: UIHelper}), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}